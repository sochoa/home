
call pathogen#helptags()
call pathogen#infect()

set tabstop=4
set shiftwidth=4
set expandtab

" Search settings
set nohlsearch      "Don't highlight searches
set ignorecase      "for pattern matching
set smartcase       "if I use uppercase, match case sensitive
set incsearch       "show us matches immediately

" Code recognition
syntax on

"set t_Co=256
colorscheme railscasts

" Misc stuff
set nobackup
set nocompatible                "all vim features!
set showcmd                     "show commands in status line
set confirm                     "Prompt on errors
set title                       "Let VIM manage the term title
set titlestring=%t\ %y\ %r\ %m  "Set a useful term title
set hidden                      "Better buffer management
set encoding=utf-8              "Use UTF-8 as standard encoding
set backspace=indent,eol,start  "Make backspace more flexible
set ruler                       "Always show current positions along the bottom
set formatoptions=torc          "Do some neat comment stuff for us
set whichwrap+=<,>
set hid
set ruler
set backspace=eol,start,indent
set magic
set noerrorbells
set novisualbell
set nowb
set wildmenu
set cmdheight=1
set report=0 " tell us when anything is changed via :...
set showmatch
set incsearch
set showcmd
set ttymouse=xterm
set pastetoggle=<F6>

let mapleader = ","

nmap <Leader>e :e ~/.vimrc<cr>
nmap <Leader>p\| :vsp<cr>
nmap <Leader>p_ :sp<cr>
nmap <Leader>s :update<cr>
nmap <Leader>w<Right> <c-w><Right>
nmap <Leader>w<Left> <c-w><Left>
nmap <Leader>w<Down> <c-w><Down>
nmap <Leader>w<Up> <c-w><Up>
nmap <Leader>bj :bnext<cr>
nmap <Leader>bk :bprev<cr>
nmap <Leader>b :ls<cr>:b 
nmap <Leader>bx :bd<cr>
nmap <Leader>x :q<cr>
nnoremap <Leader>q @q
nmap <F5> :! !<cr>
nnoremap <leader>t :TlistToggle<CR>
nnoremap <leader>o :CommandT<CR>

inoremap <Leader>s <Esc>:w<cr>
inoremap JJ <Esc>
inoremap Jj <Esc>
inoremap jj <Esc>
inoremap jk <Esc>
imap <ESC> <NOP>
map <silent> <cr> :noh<cr>
autocmd! bufwritepost .vimrc source ~/.vimrc

" Navigation Changes
noremap l h
noremap ; l
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>


" If you like long lines with line wrapping enabled, this solves the problem
" that pressing down jumpes your cursor “over” the current line to the next
" line. It changes behaviour so that it jumps to the next row in the editor
" (much more natural)
nnoremap j gj
nnoremap k gk


" Finally, a trick by Steve Losh for when you forgot to sudo before editing a
" file that requires root privileges (typically /etc/hosts). This lets you use
" w!! to do that after you opened the file already:
cmap w!! w !sudo tee % >/dev/null

" Fold Tag
nnoremap <leader>ft Vatzf


""""""""""""""""""""""""""""""
" => Statusline
""""""""""""""""""""""""""""""
set cursorline
hi CursorLine   cterm=NONE ctermbg=darkgray ctermfg=white guibg=gray guifg=white

set laststatus=2
filetype plugin on

set hidden
set switchbuf+=useopen

" ===============================================================================
" Automatically exit insert mode.
au InsertEnter * let updaterestore=&updatetime | set updatetime=4000
au InsertLeave * let &updatetime=updaterestore
au CursorHoldI * stopinsert

augroup BgHighlight
    autocmd!
    autocmd WinEnter * set cul
    autocmd WinLeave * set nocul
augroup END

if !has("gui_running") | let g:skip_loading_mswin = 1 | endif
if has("gui_running") | colorscheme desert | endif

let g:tagbar_usearrows = 1
let g:tagbar_width = 50
noremap <F4> :TagbarToggle<CR>
noremap <leader>td <C-]>

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'
