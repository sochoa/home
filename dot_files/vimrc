set nocompatible
set tabstop=2
set shiftwidth=2
set expandtab

filetype plugin on
filetype plugin indent on 
autocmd Filetype ruby setlocal ts=2 sts=2 sw=2

" Search settings
set ignorecase      "for pattern matching
set smartcase       "if I use uppercase, match case sensitive
set incsearch       "show us matches immediately

" Code recognition
syntax on

" Misc stuff
set backupdir=~/.vim/backup,/tmp
set directory=~/.vim/backup,/tmp

set showcmd                     "show commands in status line
set confirm                     "Prompt on errors
set title                       "Let VIM manage the term title
set titlestring=%t\ %y\ %r\ %m  "Set a useful term title
set encoding=utf-8              "Use UTF-8 as standard encoding
set backspace=indent,eol,start  "Make backspace more flexible
set ruler                       "Always show current positions along the bottom
set formatoptions=torc          "Do some neat comment stuff for us
set whichwrap+=<,>
set hid
set ruler
set backspace=eol,start,indent
set magic
set noerrorbells
set novisualbell
set nowb
set wildmenu
set cmdheight=1
set report=0 " tell us when anything is changed via :...
set showmatch
set incsearch
set showcmd
set ttymouse=xterm
set pastetoggle=<F6>

let mapleader = ","

nmap <Leader>e :e ~/.vimrc<cr>
nmap <Leader>p\| :vsp<cr>
nmap <Leader>p_ :sp<cr>
nmap <Leader>s :update<cr>
nmap <Leader>w<Right> <c-w><Right>
nmap <Leader>w<Left> <c-w><Left>
nmap <Leader>w<Down> <c-w><Down>
nmap <Leader>w<Up> <c-w><Up>
nmap <Leader>bj :bnext<cr>
nmap <Leader>bk :bprev<cr>
nmap <Leader>b :ls<cr>:b 
nmap <Leader>bx :bd<cr>
nmap <Leader>x :q<cr>
vmap <Leader>t :Tabularize /

nnoremap <Leader>q @q
nmap <F5> :! !<cr>

inoremap <Leader>s <Esc>:w<cr>
inoremap JJ <Esc>
inoremap Jj <Esc>
inoremap jj <Esc>
inoremap jk <Esc>
imap <ESC> <NOP>
map <silent> <cr> :noh<cr>
autocmd! bufwritepost .vimrc source ~/.vimrc

" Navigation Changes
noremap l h
noremap ; l
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

" Line wrapping
nnoremap j gj
nnoremap k gk

filetype plugin on

set switchbuf+=useopen

" ==============================
" Automatically exit insert mode
"
au InsertEnter * let updaterestore=&updatetime | set updatetime=4000
au InsertLeave * let &updatetime=updaterestore
au CursorHoldI * stopinsert

if !has("gui_running") | let g:skip_loading_mswin = 1 | endif

" ===========================
" Required for Vundle to work 
" properly
"
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'

" ===================
" Vundle plugins list

Bundle 'Valloric/YouCompleteMe'
Bundle 'tpope/vim-cucumber'
Bundle 'scrooloose/syntastic'
Bundle 'Lokaltog/powerline'
" Bundle 'bling/vim-airline'
Bundle 'godlygeek/tabular'
Bundle 'ldx/vim-indentfinder'

" Always show statusline
set laststatus=2

set rtp+=/usr/lib/python2.6/site-packages/Powerline-beta-py2.6.egg/powerline/bindings/vim

colorscheme railscasts

set hls
highlight Search cterm=NONE ctermfg=black ctermbg=yellow guibg=yellow guifg=black

highlight ColorColumn ctermbg=magenta
call matchadd('ColorColumn', '\%81v', 100)

nnoremap <silent> n   n:call HLNext(1)<cr>
nnoremap <silent> N   N:call HLNext(1)<cr>
 
function! HLNext (blinktime)
  let [bufnum, lnum, col, off] = getpos('.')
  let matchlen = strlen(matchstr(strpart(getline('.'),col-1),@/))
  let target_pat = '\c\%#'.@/
  let ring = matchadd('ErrorMsg', target_pat, 101)
  redraw
  exec 'sleep ' . float2nr(a:blinktime * 1000) . 'm'
  call matchdelete(ring)
  redraw
endfunction

" Map semicolon to colon to get rid of the headache of 
" hitting shift+semi-colon each time
